/*
Solutions Novika.
Copyright 2021
===========================================================================

Filename :      ParticlesManager.c

Author(s):      Charles Richard, CPI # 6045522

Public prefix : ParticlesManager

Project # : C-1421

Product: UFEC23

Creation date:  2022/10/12

Description:    Communication channel with particles measurement board

===========================================================================

Modifications
-------------

By    |   Date     | Version | Description
------+------------+---------+---------------------------------------------
CR    | 2022/10/12 | -       | Creation
===========================================================================
*/

#include "ParticlesManager.h"
#include "main.h"
#include "cmsis_os.h"
#include "stm32f1xx_hal.h"

#define RX_BUFFER_LENGTH 8

extern UART_HandleTypeDef huart3;
osSemaphoreId MP_UART_SemaphoreHandle;

static uint8_t RX_BUFFER[RX_BUFFER_LENGTH];
const uint8_t TX_DATA;




void ParticlesManager(void const * argument) {

	osSemaphoreDef(MP_UART_SemaphoreHandle);
	MP_UART_SemaphoreHandle = osSemaphoreCreate(osSemaphore(MP_UART_SemaphoreHandle), 1);
	osSemaphoreWait(MP_UART_SemaphoreHandle,1); //decrement semaphore value for the lack of way to create a semaphore with a count of 0.

	static bool Rx_complete = false;

	for(;;) {

		HAL_UART_Transmit_IT(&MP_UART_SemaphoreHandle, &TX_DATA, 1);

		if(osErrorOS == osSemaphoreWait(MP_UART_SemaphoreHandle,1000)) //wait 500ms for an answer or retry
		{
			//clearly something is wrong Abort the transmission
			//HAL_GPIO_WritePin(STATUS_LED0_GPIO_Port,STATUS_LED0_Pin,RESET);
			HAL_UART_Abort_IT(&huart3,ADC_ADDRESS_7BIT);
			HAL_UART_DeInit(&huart3);
			osDelay(100);
			MX_USART3_UART_Init();
			osDelay(100);
		}
		else
		{

			do{
				Rx_complete = false;
				osDelay(300); //wait to give the chance to the ADC to complete the conversion 1/3.75 = 266ms
				HAL_UART_Receive_IT(&huart3, RX_BUFFER,8);
				if(osErrorOS == osSemaphoreWait(MP_UART_SemaphoreHandle,500)) //wait 500ms for an answer or retry
				{
					continue;
				}
				else
				{
					Rx_complete = (IsDataNew(adcData[3]));
				}

			}while (!Rx_complete);
		}

	}

}


void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{

	if(huart->Instance == USART3)
	{
		osSemaphoreRelease(MP_UART_SemaphoreHandle);
	}


}

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{

	if(huart->Instance == USART3)
	{
		osSemaphoreRelease(MP_UART_SemaphoreHandle);
	}
}

void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{

	if(huart->Instance == USART3)
	{
		uint32_t errorcode = huart->ErrorCode;//send this error code up the line to communicate to PC?
	}

}
