syntax = "proto3";

// A2A = Anyone to anyone
// C2S = Client to server (client = remote)
// S2C = Server to client
package SBI.iot;

import 'SBI.iot.common.proto';

/* Unfortunately, C code enum make it mandatory to ensure the name is globally unique. */
enum EDEVICETYPE
{
	None = 0;
	IoTServer_V1 = 1;
	Remote_V1 = 2;
	Stove_V1 = 3;
}

message DeviceInfo
{
	EDEVICETYPE device_type = 1;
	SBI.iot.common.Version sw_version = 2;
}

message RemoteState
{
	float temperatureC_curr = 1;
}

message C2SGetStatus
{
	RemoteState remote_state = 1;
}

message S2CGetStatusResp
{
	message StoveState
	{
		SBI.iot.common.FanspeedSet fan_speed_set = 1;
		SBI.iot.common.FanspeedBoundary fan_speed_boundary = 2;
		SBI.iot.common.TemperatureSetPoint remote_temperature_setp = 3;
		bool is_open_air = 4;
		reserved 5;
		SBI.iot.common.DateTime datetime = 6;
	}

	DeviceInfo stove_info = 1;	// Represent the stove itself
	StoveState stove_state = 3;
}

message C2SChangeSettingSP
{
	SBI.iot.common.FanspeedSet fan_speed_set = 1;
	SBI.iot.common.TemperatureSetPoint temperature_setp = 2;
}

message S2CChangeSettingSPResp
{
	
}

message C2SPairingReq
{
	DeviceInfo remote_info = 1;
	bytes encryption_key = 2;	// 16 bytes key
}

message C2SPairingReqResp
{
	enum EResponse
	{
		OK = 0;
		IncompatibleDevice = 1;
		InvalidKey = 2;
	}

	DeviceInfo bridge_info = 2;
	EResponse response = 3;
}

message Cmd
{
	uint32 seq_number = 1;
	oneof payload
	{
		C2SGetStatus c2s_get_status = 0x22;
		S2CGetStatusResp s2c_get_status_resp = 0x23;

		C2SChangeSettingSP c2s_change_settingsp = 0x24;
		S2CChangeSettingSPResp s2c_change_settingsp_resp = 0x25;
	}
}
