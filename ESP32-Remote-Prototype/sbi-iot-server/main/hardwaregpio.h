#ifndef _HARDWAREGPIO_H_
#define _HARDWAREGPIO_H_

#include <stdbool.h>
#include <stdint.h>

#include "driver/uart.h"
#include "driver/gpio.h"

// Mapping version 0.0
// #define HWGPIO_BRIDGEUART_TXD (17)
// #define HWGPIO_BRIDGEUART_RXD (16)
// #define HWGPIO_BRIDGEUART_RTS (UART_PIN_NO_CHANGE)
// #define HWGPIO_BRIDGEUART_CTS (UART_PIN_NO_CHANGE)
// 
// #define HWGPIO_SANITY_LED_PIN (0)
// 
// #define HWGPIO_BRIDGEUART_PORT_NUM      (UART_NUM_2)
// #define HWGPIO_BRIDGEUART_BAUDRATE      (115200)

// #define HWGPIO_BRIDGEUART_BUFFSIZE 255

// -----------------------------------------------------------------
// Mapping version 0.1

// LEDs
#define HWGPIO_SANITYLED_PIN (GPIO_NUM_0)

#define HWGPIO_STATUSLED0_PIN (GPIO_NUM_22)
#define HWGPIO_STATUSLED1_PIN (GPIO_NUM_23)
#define HWGPIO_STATUSLED2_PIN (GPIO_NUM_5)

#define HWGPIO_UART_DEV0_TX (GPIO_NUM_1)
#define HWGPIO_UART_DEV0_RX (GPIO_NUM_3)

// STM32
#define HWGPIO_STM32_BOOT1_PIN (GPIO_NUM_18)
#define HWGPIO_STM32_RESET_PIN (GPIO_NUM_19)
#define HWGPIO_STM32_BOOT0_PIN (GPIO_NUM_21)

// Communication between the STM32 and the ESP32
#define HWGPIO_BRIDGEUART_TXD_PIN (GPIO_NUM_17)
#define HWGPIO_BRIDGEUART_RXD_PIN (GPIO_NUM_16)
#define HWGPIO_BRIDGEUART_RTS_PIN (UART_PIN_NO_CHANGE)
#define HWGPIO_BRIDGEUART_CTS_PIN (UART_PIN_NO_CHANGE)
#define HWGPIO_BRIDGEUART_PORT_NUM (UART_NUM_2)
#define HWGPIO_BRIDGEUART_BAUDRATE (115200)
#define HWGPIO_BRIDGEUART_BUFFSIZE 255

// SD Card
#define HWGPIO_SDCARD_SPI_HOST (SPI2_HOST)

#define HWGPIO_SDCARD_MOSI_PIN (GPIO_NUM_13)
#define HWGPIO_SDCARD_MISO_PIN (GPIO_NUM_12)
#define HWGPIO_SDCARD_SCLK_PIN (GPIO_NUM_14)

#define HWGPIO_SDCARD_CS_PIN (GPIO_NUM_15)

#define HWGPIO_SDCARD_DETECT_PIN (GPIO_NUM_39)

// Buzzer
#define HWGPIO_BUZZER_ON_PIN (GPIO_NUM_27)

// Model
#define HWGPIO_MODEL_BIT0_PIN (GPIO_NUM_26)
#define HWGPIO_MODEL_BIT1_PIN (GPIO_NUM_34)
#define HWGPIO_MODEL_BIT2_PIN (GPIO_NUM_35)

typedef enum
{
    HARDWAREGPIO_ESTATUSLED_0 = 0,
    HARDWAREGPIO_ESTATUSLED_1 = 1,
    HARDWAREGPIO_ESTATUSLED_2 = 1
} HARDWAREGPIO_ESTATUSLED;

// --------------------------------------
// Functions
void HARDWAREGPIO_Init();

void HARDWAREGPIO_SetSanity(bool bIsActive);

void HARDWAREGPIO_SetStatusLED(HARDWAREGPIO_ESTATUSLED eStatusLED, bool bIsActive);

bool HARDWAREGPIO_GetISSDCardAvailable();

uint32_t HARDWAREGPIO_GetModel();

#endif